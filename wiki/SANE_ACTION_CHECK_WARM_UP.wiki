#summary SANE_ACTION_CHECK_WARM_UP

== frontend use ==

If the returned code is [SANE_STATUS_WARMING_UP] the frontend
should repoll after a reasonable interval. In the event of any other
result code, the [SaneFlow flow] should proceed as usual. A frontend MAY differentiate between
an error condition and [SANE_STATUS_UNSUPPORTED].

{{{

warmup:
        if (s->compat_level >= SANE_API_LEVEL(1,1,0)) {
                SANE_Int interval = 2; /* default interval is two seconds */

                result = sane_control_option(handle, 0,
                                SANE_ACTION_CHECK_WARM_UP, &interval);

                if (result == SANE_STATUS_WARMING_UP)
                        ... scanner not ready, might wait and repoll
                        after the suggested interval ...
                        goto warmup;

                if (result == SANE_STATUS_GOOD || result == SANE_STATUS_UNSUPPORTED)
                        goto start;

                return result;
        }

start:

        sane_start(handle);
}}}

An helper function is provided in sane/helper.h which properly implements
this and can be used in place of sane_start() in the frontend's code. This
can be used to quickly add a functionality. An advanced frontend might want
to implement things differently in order to make the user aware of the warmup
condition.

{{{
#include <sane/helper.h>

        ...
        sane_warm_and_start(h);
}}}

It should be noted that not every scanner is capable to tell that
it is warming up until the scan command is issued, so a fronted should
always be prepared to receive [SANE_STATUS_WARMING_UP] from sane_start().


== backend implementation ==

A backend MAY check the warming up condition and return
[SANE_STATUS_WARMING_UP] if the scanner is warming up, [SANE_STATUS_GOOD]
if it is not or any error as appropriate.

{{{
        switch (action) {
        case SANE_ACTION_CHECK_WARM_UP:
                if (scanner_is_warming_up(...)) {
                        /* optionally suggest an poll interval if
                         * the fontend as provied a valid pointer
                         */
                        if (value)
                                *value = ... ;
                        return SANE_STATUS_WARMING_UP;
                }
                else
                        return SANE_STATUS_GOOD;
}}}